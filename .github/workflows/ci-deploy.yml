name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test Services
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - auth-service
          - upload-service
          - metadata-service
          - mint-service
          - voting-service

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: services/${{ matrix.service }}
        run: npm ci

      - name: Run linter
        working-directory: services/${{ matrix.service }}
        run: npm run lint || true

      - name: Run tests
        working-directory: services/${{ matrix.service }}
        run: npm test

      - name: Build
        working-directory: services/${{ matrix.service }}
        run: npm run build

  deploy-services:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        service:
          - auth-service:4001
          - upload-service:4002
          - metadata-service:4003
          - mint-service:4004
          - voting-service:4005

    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Render
        run: |
          echo "Deploying ${{ matrix.service }} to Render"
          # Render will auto-deploy on push
          # Or use Render API to trigger deployment

  deploy-frontend:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Deploy to Vercel
        working-directory: frontend
        run: vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

  test-contracts:
    name: Test Smart Contracts
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: services/contract-service
        run: npm ci

      - name: Compile contracts
        working-directory: services/contract-service
        run: npm run compile

      - name: Run tests
        working-directory: services/contract-service
        run: npm test

      - name: Check formatting
        working-directory: services/contract-service
        run: npx prettier --check contracts/

